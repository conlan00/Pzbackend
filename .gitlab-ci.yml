stages:
  - test
  - build
  - deploy

variables:
  SOURCE_CODE_PATH: './'
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  DOCKER_IMAGE: "$CI_REGISTRY_IMAGE/dotnet"
  IMAGE_NAME: "backend"

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - $SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json
    - $SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*
    - $NUGET_PACKAGES_DIRECTORY
  policy: pull-push

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_ID' #merge
    - if: '$CI_COMMIT_BRANCH' #push

test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:8.0
  before_script:
    - dotnet restore --packages $NUGET_PACKAGES_DIRECTORY
    - export PATH="$PATH:/root/.dotnet/tools"
    - dotnet tool install -g dotnet-format
  script:
    - mkdir -p test-results
    - dotnet build --no-restore
#    - dotnet test --no-restore --no-build --verbosity normal --logger "trx;LogFileName=test-results/results.trx"
    - dotnet format ./Backend.sln --verify-no-changes --severity warn
#  artifacts:
#    paths:
#      - test-results/
#    expire_in: 1 week
#    name: "test-artifacts-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"

build:
  stage: build
  image: docker:27.3.1
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  cache:
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - $SOURCE_CODE_PATH$OBJECTS_DIRECTORY/
      - $NUGET_PACKAGES_DIRECTORY
  script:
    - export IMAGE_TAG="$CI_COMMIT_REF_SLUG-$(date +%Y%m%d%H%M%S)"
    - echo $IMAGE_TAG > image_tag.txt
    - docker build -t $DOCKER_IMAGE:$IMAGE_TAG .
    - docker push $DOCKER_IMAGE:$IMAGE_TAG
  artifacts:
    paths:
      - image_tag.txt

deploy:
  stage: deploy
  image: docker:27.3.1
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "$SSH_PRIVATE_KEY" > $KEY_PATH
    - chmod 600 $KEY_PATH
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $REMOTE_IP2 >> ~/.ssh/known_hosts
  script:
    - IMAGE_TAG=$(cat image_tag.txt)
    - docker pull $DOCKER_IMAGE:$IMAGE_TAG
    - docker save -o $IMAGE_NAME.tar $DOCKER_IMAGE:$IMAGE_TAG
    - scp -i $KEY_PATH $IMAGE_NAME.tar $REMOTE_HOST2@$REMOTE_IP2:/home/$REMOTE_HOST2/
    - ssh -i $KEY_PATH $REMOTE_HOST2@$REMOTE_IP2 sudo snap install docker
    - ssh -i $KEY_PATH $REMOTE_HOST2@$REMOTE_IP2 "sudo docker stop \$(sudo docker ps -q) || true"
    - ssh -i $KEY_PATH $REMOTE_HOST2@$REMOTE_IP2 "sudo docker rm \$(sudo docker ps -aq) || true"
    - ssh -i $KEY_PATH $REMOTE_HOST2@$REMOTE_IP2 sudo docker load -i /home/$REMOTE_HOST2/$IMAGE_NAME.tar
    - ssh -i $KEY_PATH $REMOTE_HOST2@$REMOTE_IP2 sudo docker run -d --name backend --restart always -p 7210:7210 -p 5084:5084 $DOCKER_IMAGE:$IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  
      when: on_success 